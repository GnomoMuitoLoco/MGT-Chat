name: Notificar Discord com commits

on:
  push:

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Enviar commits para o Discord
        run: |
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          BRANCH_URL="https://github.com/${GITHUB_REPOSITORY}/tree/${BRANCH_NAME}"
          COUNT=$(jq '.commits | length' "$GITHUB_EVENT_PATH")
          AUTHOR="${GITHUB_ACTOR}"
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

          # Monta lista de commits (hash curto, link, mensagem e autor)
          COMMITS=$(jq -r \
            '.commits[] | "[`\(.id[0:7])`](\(.url)) \(.message) - \(.author.name)"' \
            "$GITHUB_EVENT_PATH")

          # Escapa para JSON (garante que n√£o quebre o payload)
          COMMITS_ESCAPED=$(printf "%s" "$COMMITS" | jq -Rs .)

          # Monta payload com jq (mais seguro que interpolar direto)
          jq -n \
            --arg username "GitHub Bot" \
            --arg avatar "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png" \
            --arg title "üì¢ Atualiza√ß√£o no reposit√≥rio" \
            --arg author "üßë‚Äçüíª Autor: ${AUTHOR}" \
            --arg repo   "üì¶ Reposit√≥rio: ${GITHUB_REPOSITORY}" \
            --arg branch "üåø Branch: [${BRANCH_NAME}](${BRANCH_URL})" \
            --arg count  "üìå ${COUNT} novo(s) commit(s):" \
            --arg commits "$COMMITS" \
            --arg time   "$TIMESTAMP" \
            '{
              username: $username,
              avatar_url: $avatar,
              embeds: [{
                title: $title,
                description: ($author + "\n" + $repo + "\n" + $branch + "\n" + $count + "\n" + $commits),
                color: 7506394,
                timestamp: $time
              }]
            }' \
          | curl -X POST -H "Content-Type: application/json" \
            -d @- ${{ secrets.DISCORD_WEBHOOK }}
